
# swisscalc_Calc_parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = 's1\xccd84\xd4\xeae\x0b\xde\x91\xfe{_\x01'
    
_lr_action_items = {'and':([1,3,4,7,8,9,10,12,15,16,17,18,19,20,21,22,41,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,],[-38,-37,-41,-42,-40,-30,-36,-45,-39,-43,36,-44,-28,-27,36,-26,-29,-35,36,36,-32,36,36,36,36,36,36,36,36,36,36,36,-21,-24,36,-18,-25,-15,-22,-17,-23,-16,36,-31,]),'modulo':([1,3,4,7,8,9,10,12,15,16,17,18,19,20,21,22,41,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,],[-38,-37,-41,-42,-40,-30,-36,-45,-39,-43,37,-44,-28,-27,37,-26,-29,-35,37,37,-32,37,37,37,37,37,37,37,37,37,37,37,37,-24,37,-18,-25,37,37,-17,37,37,37,-31,]),'divide':([1,3,4,7,8,9,10,12,15,16,17,18,19,20,21,22,41,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,],[-38,-37,-41,-42,-40,-30,-36,-45,-39,-43,39,-44,-28,-27,39,-26,-29,-35,39,39,-32,39,39,39,39,39,39,39,39,39,39,39,39,-24,39,-18,-25,39,39,-17,39,39,39,-31,]),'divassign':([15,],[29,]),'multiply':([1,3,4,7,8,9,10,12,15,16,17,18,19,20,21,22,41,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,],[-38,-37,-41,-42,-40,-30,-36,-45,-39,-43,44,-44,-28,-27,44,-26,-29,-35,44,44,-32,44,44,44,44,44,44,44,44,44,44,44,44,-24,44,-18,-25,44,44,-17,44,44,44,-31,]),'comma':([1,3,4,7,8,9,10,12,15,16,18,19,20,22,41,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,],[-38,-37,-41,-42,-40,-30,-36,-45,-39,-43,-44,-28,-27,-26,-29,-35,-5,-9,-32,76,-14,-12,-8,-7,-10,-6,-11,-4,-13,-3,-21,-24,-20,-18,-25,-15,-22,-17,-23,-16,-19,-31,]),'lshift':([1,3,4,7,8,9,10,12,15,16,17,18,19,20,21,22,41,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,],[-38,-37,-41,-42,-40,-30,-36,-45,-39,-43,43,-44,-28,-27,43,-26,-29,-35,43,43,-32,43,43,43,43,43,43,43,43,43,43,43,43,-24,43,-18,-25,-15,-22,-17,-23,-16,43,-31,]),'binint':([0,2,5,13,14,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,76,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'subassign':([15,],[23,]),'xor':([1,3,4,7,8,9,10,12,15,16,17,18,19,20,21,22,41,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,],[-38,-37,-41,-42,-40,-30,-36,-45,-39,-43,38,-44,-28,-27,38,-26,-29,-35,38,38,-32,38,38,38,38,38,38,38,38,38,38,38,-21,-24,-20,-18,-25,-15,-22,-17,-23,-16,38,-31,]),'add':([0,1,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,],[5,-38,5,-37,-41,5,-42,-40,-30,-36,-45,5,5,-39,-43,42,-44,-28,-27,42,-26,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-29,5,5,5,5,5,5,-35,42,42,-32,42,42,42,42,42,42,42,42,42,42,42,42,-24,42,-18,-25,-15,42,-17,42,-16,42,-31,5,]),'decint':([0,2,5,13,14,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,76,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'octint':([0,2,5,13,14,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,76,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'$end':([1,3,4,6,7,8,9,10,11,12,15,16,17,18,19,20,22,41,48,49,50,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,],[-38,-37,-41,0,-42,-40,-30,-36,-2,-45,-39,-43,-1,-44,-28,-27,-26,-29,-35,-5,-9,-32,-14,-12,-8,-7,-10,-6,-11,-4,-13,-3,-21,-24,-20,-18,-25,-15,-22,-17,-23,-16,-19,-31,]),'rsftassign':([15,],[32,]),'rshift':([1,3,4,7,8,9,10,12,15,16,17,18,19,20,21,22,41,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,],[-38,-37,-41,-42,-40,-30,-36,-45,-39,-43,45,-44,-28,-27,45,-26,-29,-35,45,45,-32,45,45,45,45,45,45,45,45,45,45,45,45,-24,45,-18,-25,-15,-22,-17,-23,-16,45,-31,]),'string':([0,2,5,13,14,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,76,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'power':([1,3,4,7,8,9,10,12,15,16,17,18,19,20,21,22,41,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,],[-38,-37,-41,-42,-40,-30,-36,-45,-39,-43,40,-44,40,40,40,40,-29,-35,40,40,-32,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-25,40,40,40,40,40,40,-31,]),'factorial':([1,3,4,7,8,9,10,12,15,16,17,18,19,20,21,22,41,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,],[-38,-37,-41,-42,-40,-30,-36,-45,-39,-43,41,-44,41,41,41,41,-29,-35,41,41,-32,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-25,41,41,41,41,41,41,-31,]),'andassign':([15,],[27,]),'newline':([0,],[11,]),'exponentfloat':([0,2,5,13,14,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,76,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'lsftassign':([15,],[30,]),'mulassign':([15,],[31,]),'lparen':([0,2,5,13,14,15,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,76,],[13,13,13,13,13,25,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'addassign':([15,],[33,]),'not':([0,2,5,13,14,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,76,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'orassign':([15,],[34,]),'subtract':([0,1,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,],[14,-38,14,-37,-41,14,-42,-40,-30,-36,-45,14,14,-39,-43,46,-44,-28,-27,46,-26,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-29,14,14,14,14,14,14,-35,46,46,-32,46,46,46,46,46,46,46,46,46,46,46,46,-24,46,-18,-25,-15,46,-17,46,-16,46,-31,14,]),'xorassign':([15,],[26,]),'powassign':([15,],[24,]),'ident':([0,2,5,13,14,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,76,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'rparen':([1,3,4,7,8,9,10,12,15,16,18,19,20,21,22,25,41,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,],[-38,-37,-41,-42,-40,-30,-36,-45,-39,-43,-44,-28,-27,48,-26,52,-29,-35,-5,-9,75,-32,-34,-14,-12,-8,-7,-10,-6,-11,-4,-13,-3,-21,-24,-20,-18,-25,-15,-22,-17,-23,-16,-19,-31,-33,]),'modassign':([15,],[28,]),'assign':([15,],[35,]),'hexint':([0,2,5,13,14,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,76,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'or':([1,3,4,7,8,9,10,12,15,16,17,18,19,20,21,22,41,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,],[-38,-37,-41,-42,-40,-30,-36,-45,-39,-43,47,-44,-28,-27,47,-26,-29,-35,47,47,-32,47,47,47,47,47,47,47,47,47,47,47,-21,-24,-20,-18,-25,-15,-22,-17,-23,-16,-19,-31,]),'pointfloat':([0,2,5,13,14,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,76,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'function':([0,2,5,13,14,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,76,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'float':([0,2,5,13,14,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,76,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'arguments':([25,76,],[51,77,]),'statement':([0,],[6,]),'integer':([0,2,5,13,14,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,76,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'expression':([0,2,5,13,14,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,76,],[17,19,20,21,22,49,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,53,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement_expr','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',230),
  ('statement -> newline','statement',1,'p_statement_newline','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',239),
  ('expression -> ident assign expression','expression',3,'p_expression_assign','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',273),
  ('expression -> ident addassign expression','expression',3,'p_expression_assign','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',274),
  ('expression -> ident subassign expression','expression',3,'p_expression_assign','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',275),
  ('expression -> ident mulassign expression','expression',3,'p_expression_assign','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',276),
  ('expression -> ident divassign expression','expression',3,'p_expression_assign','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',277),
  ('expression -> ident modassign expression','expression',3,'p_expression_assign','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',278),
  ('expression -> ident powassign expression','expression',3,'p_expression_assign','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',279),
  ('expression -> ident lsftassign expression','expression',3,'p_expression_assign','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',280),
  ('expression -> ident rsftassign expression','expression',3,'p_expression_assign','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',281),
  ('expression -> ident andassign expression','expression',3,'p_expression_assign','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',282),
  ('expression -> ident orassign expression','expression',3,'p_expression_assign','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',283),
  ('expression -> ident xorassign expression','expression',3,'p_expression_assign','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',284),
  ('expression -> expression add expression','expression',3,'p_expression_binop','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',302),
  ('expression -> expression subtract expression','expression',3,'p_expression_binop','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',303),
  ('expression -> expression multiply expression','expression',3,'p_expression_binop','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',304),
  ('expression -> expression divide expression','expression',3,'p_expression_binop','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',305),
  ('expression -> expression or expression','expression',3,'p_expression_binop','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',306),
  ('expression -> expression xor expression','expression',3,'p_expression_binop','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',307),
  ('expression -> expression and expression','expression',3,'p_expression_binop','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',308),
  ('expression -> expression lshift expression','expression',3,'p_expression_binop','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',309),
  ('expression -> expression rshift expression','expression',3,'p_expression_binop','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',310),
  ('expression -> expression modulo expression','expression',3,'p_expression_binop','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',311),
  ('expression -> expression power expression','expression',3,'p_expression_binop','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',312),
  ('expression -> subtract expression','expression',2,'p_expression_unary','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',322),
  ('expression -> add expression','expression',2,'p_expression_unary','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',323),
  ('expression -> not expression','expression',2,'p_expression_unary','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',324),
  ('expression -> expression factorial','expression',2,'p_expression_factorial','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',332),
  ('expression -> function','expression',1,'p_expression_func','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',337),
  ('function -> ident lparen arguments rparen','function',4,'p_func_with_args','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',341),
  ('function -> ident lparen rparen','function',3,'p_func_without_args','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',348),
  ('arguments -> expression comma arguments','arguments',3,'p_arguments_plural','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',356),
  ('arguments -> expression','arguments',1,'p_arguments_single','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',363),
  ('expression -> lparen expression rparen','expression',3,'p_expression_group','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',368),
  ('expression -> string','expression',1,'p_expression_str','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',373),
  ('expression -> integer','expression',1,'p_expression_number','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',379),
  ('expression -> float','expression',1,'p_expression_number','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',380),
  ('expression -> ident','expression',1,'p_expression_name','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',385),
  ('integer -> decint','integer',1,'p_integer','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',392),
  ('integer -> binint','integer',1,'p_integer','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',393),
  ('integer -> octint','integer',1,'p_integer','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',394),
  ('integer -> hexint','integer',1,'p_integer','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',395),
  ('float -> pointfloat','float',1,'p_float','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',400),
  ('float -> exponentfloat','float',1,'p_float','/Users/lightxue/program/github/SwissCalc/autoload/swisscalc.py',401),
]
